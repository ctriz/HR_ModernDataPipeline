-- 0) Schema setup
CREATE SCHEMA IF NOT EXISTS hr_txn;
SET search_path = hr_txn;

-- 1. Core reference tables
CREATE TABLE locations (
  location_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  location_code      TEXT NOT NULL UNIQUE,            -- natural/business key
  name               TEXT NOT NULL,
  country            TEXT NOT NULL,
  created_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at         TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TABLE departments (
  department_id      BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  department_code    TEXT NOT NULL UNIQUE,            -- natural/business key
  name               TEXT NOT NULL,
  created_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at         TIMESTAMPTZ NOT NULL DEFAULT now()
);

CREATE TABLE jobs (
  job_id             BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  job_code           TEXT NOT NULL UNIQUE,            -- natural/business key
  title              TEXT NOT NULL,
  job_family         TEXT,                            -- e.g., "Engineering", "HR"
  grade              TEXT,                            -- e.g., "L5", "M3", "IC2"
  created_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at         TIMESTAMPTZ NOT NULL DEFAULT now()
);

-- 2. Employees & org structure
CREATE TABLE employees (
  employee_id        BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  employee_code      TEXT NOT NULL UNIQUE,            -- natural/business key
  first_name         TEXT NOT NULL,
  last_name          TEXT NOT NULL,
  email              TEXT NOT NULL UNIQUE,
  phone              TEXT,
  hire_date          DATE NOT NULL,
  terminate_date     DATE,                            -- NULL => active
  department_id      BIGINT NOT NULL REFERENCES departments(department_id),
  job_id             BIGINT NOT NULL REFERENCES jobs(job_id),
  manager_employee_id BIGINT REFERENCES employees(employee_id),
  location_id        BIGINT NOT NULL REFERENCES locations(location_id),
  created_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  CHECK (terminate_date IS NULL OR terminate_date >= hire_date)
);


-- 3. Compensation (operational “facty” data in OLTP)
-- Record point-in-time salary assignments (effective-dated).
CREATE TABLE employee_compensation (
  comp_id            BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  employee_id        BIGINT NOT NULL REFERENCES employees(employee_id),
  base_salary        NUMERIC(12,2) NOT NULL,
  bonus			     NUMERIC(12,2),
  currency           TEXT NOT NULL DEFAULT 'USD',
  effective_from 	 DATE NOT NULL DEFAULT CURRENT_DATE,
  effective_to   	 DATE,
  created_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at         TIMESTAMPTZ NOT NULL DEFAULT now(),
  CHECK (effective_to IS NULL OR effective_to > effective_from)
);

-- Useful indexes for CDC consumers and warehouse loaders
CREATE INDEX idx_employees_dept ON employees(department_id);
CREATE INDEX idx_employees_job  ON employees(job_id);
CREATE INDEX idx_comp_employee  ON employee_compensation(employee_id, effective_from);


